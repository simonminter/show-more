{"version":3,"file":"showMore.min.js","sources":["../sources/utils/function.js","../sources/utils/regex.js","../sources/utils/defaults.js","../sources/index.js"],"sourcesContent":["/**\r\n * Get hidden element\r\n *\r\n * @param {object} object\r\n * @param {String} type - type of element table | div\r\n * @returns\r\n */\r\nconst getNumber = ({ rows, children }, type) => {\r\n  const elementType = type === \"table\" ? rows : children;\r\n\r\n  const numbersElementHidden = [].slice\r\n    .call(elementType)\r\n    .filter((el) => el.className === \"hidden\").length;\r\n  return numbersElementHidden !== 0 ? ` ${numbersElementHidden}` : \"\";\r\n};\r\n\r\n// https://stackoverflow.com/questions/6003271/substring-text-with-html-tags-in-javascript\r\n/**\r\n * Substring text width html tags\r\n *\r\n * @param {String} originalText - text with html tags\r\n * @param {String} count - limit of characters\r\n * @returns\r\n */\r\nconst htmlSubstr = (originalText, count) => {\r\n  let div = createElement(\"div\");\r\n  div.insertAdjacentHTML(\"afterbegin\", originalText);\r\n\r\n  walk(div, track);\r\n\r\n  function track(el) {\r\n    if (count > 0) {\r\n      let len = el.data.length;\r\n      count -= len;\r\n      if (count <= 0) {\r\n        el.data = el.substringData(0, el.data.length + count);\r\n      }\r\n    } else {\r\n      el.data = \"\";\r\n    }\r\n  }\r\n\r\n  function walk(el, fn) {\r\n    let node = el.firstChild;\r\n    do {\r\n      if (node.nodeType === 3) {\r\n        fn(node);\r\n      } else if (node.nodeType === 1 && node.childNodes && node.childNodes[0]) {\r\n        walk(node, fn);\r\n      }\r\n    } while ((node = node.nextSibling));\r\n  }\r\n  return div.innerHTML;\r\n};\r\n\r\n/**\r\n * Add/remove class 'hidden' to element\r\n *\r\n * @param {HTMLElement} element\r\n * @param {String} type - type of element add or remove\r\n */\r\nconst addRemoveClass = (element, type = false) => {\r\n  return element.classList[type ? \"add\" : \"remove\"](\"hidden\");\r\n};\r\n\r\n/**\r\n * Set attributes to element\r\n *\r\n * @param {HTMLElement} el\r\n * @param {Object} object\r\n */\r\nconst setAttributes = (el, object) => {\r\n  for (let key in object) {\r\n    el.setAttribute(key, object[key]);\r\n  }\r\n};\r\n\r\n/**\r\n * Create element\r\n *\r\n * @param {String} type - type of element\r\n * @returns {HTMLElement}\r\n */\r\nconst createElement = (type) => document.createElement(type);\r\n\r\nexport { addRemoveClass, createElement, getNumber, htmlSubstr, setAttributes };\r\n","/**\r\n * Default regexes for validation\r\n */\r\nconst defaultRegex = {\r\n  newLine: {\r\n    match: /(\\r\\n|\\n|\\r)/gm,\r\n    replace: \"\",\r\n  },\r\n  space: {\r\n    match: /\\s\\s+/gm,\r\n    replace: \" \",\r\n  },\r\n  br: {\r\n    match: /<br\\s*\\/?>/gim,\r\n    replace: \"\",\r\n  },\r\n  html: {\r\n    match: /(<((?!b|\\/b|!strong|\\/strong)[^>]+)>)/gi,\r\n    replace: \"\",\r\n  },\r\n};\r\n\r\nexport default defaultRegex;\r\n","const defaultOptions = {\r\n  typeElement: \"span\",\r\n  more: false,\r\n  less: false,\r\n  number: false,\r\n  nobutton: false,\r\n  after: 0,\r\n  btnClass: \"show-more-btn\",\r\n  btnClassAppend: null,\r\n};\r\n\r\nexport default defaultOptions;\r\n","import {\r\n  addRemoveClass,\r\n  createElement,\r\n  getNumber,\r\n  htmlSubstr,\r\n  setAttributes,\r\n} from \"./utils/function\";\r\nimport defaultRegex from \"./utils/regex\";\r\nimport defaultOptions from \"./utils/defaults\";\r\n\r\n/**\r\n * @class ShowMore\r\n */\r\nexport default class ShowMore {\r\n  /**\r\n   * Constructor\r\n   *\r\n   * @param {HTMLElement} className\r\n   * @param {Object} object\r\n   */\r\n  constructor(className, { onMoreLess = () => {}, regex = {}, config } = {}) {\r\n    // all html elements\r\n    const elements = [].slice.call(document.querySelectorAll(className));\r\n\r\n    // colback function\r\n    this._onMoreLess = onMoreLess;\r\n\r\n    // global regex\r\n    this._regex = { ...defaultRegex, ...regex };\r\n\r\n    elements.map((item, index) => {\r\n      const configData = JSON.parse(item.getAttribute(\"data-config\"));\r\n      const configGlobal = config;\r\n\r\n      const configDataAndGlobal = { ...configGlobal, ...configData };\r\n\r\n      this._object = {\r\n        index,\r\n        classArray: item.classList,\r\n        ...defaultOptions,\r\n        ...configDataAndGlobal,\r\n        typeElement: configDataAndGlobal.element || \"span\",\r\n        element: item,\r\n      };\r\n\r\n      this._initial();\r\n    });\r\n  }\r\n\r\n  /**\r\n   * Initail function\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _initial = () => {\r\n    const { element, after, ellipsis, nobutton, limit, type } = this._object;\r\n    // set default aria-expande to false\r\n    setAttributes(element, { \"aria-expanded\": \"false\" });\r\n\r\n    const limitCounts = limit + after;\r\n    const ellips = ellipsis === false ? \"\" : \"...\";\r\n\r\n    console.log(nobutton);\r\n\r\n    // text\r\n    if (type === \"text\") {\r\n      const originalText = element.innerHTML.trim();\r\n      const elementText = element.textContent.trim();\r\n\r\n      if (elementText.length > limitCounts) {\r\n        let orgTexReg = originalText;\r\n\r\n        for (let key in this._regex) {\r\n          const { match, replace } = this._regex[key];\r\n          if (key && match) orgTexReg = orgTexReg.replace(match, replace);\r\n        }\r\n\r\n        const truncatedText = htmlSubstr(orgTexReg, limit - 1).concat(ellips);\r\n\r\n        element.textContent = \"\";\r\n        element.insertAdjacentHTML(\"beforeend\", truncatedText);\r\n\r\n        this._clickEvent(element, {\r\n          ...this._object,\r\n          originalText,\r\n          truncatedText,\r\n        });\r\n\r\n        if (nobutton) return;\r\n        this._addBtn(this._object);\r\n      }\r\n    }\r\n\r\n    // list and table\r\n    if (type === \"list\" || type === \"table\") {\r\n      const items = this._getNumberCount(element, type);\r\n\r\n      if (items.length > limitCounts) {\r\n        for (let i = limit; i < items.length; i++) {\r\n          addRemoveClass(items[i], true);\r\n        }\r\n\r\n        // add event click\r\n        this._clickEvent(\r\n          type === \"list\" ? element : element.nextElementSibling,\r\n          this._object\r\n        );\r\n\r\n        if (nobutton) return;\r\n        // add button to the list and table\r\n        this._addBtn(this._object);\r\n      }\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Event click\r\n   *\r\n   * @param {HTMLElement} element\r\n   * @param {Object} object\r\n   */\r\n  _clickEvent = (element, object) =>\r\n    element.addEventListener(\"click\", this._handleEvent.bind(this, object));\r\n\r\n  /**\r\n   * Create button\r\n   *\r\n   * @param {Object} object\r\n   * @returns HTMLElement\r\n   */\r\n  _createBtn = ({\r\n    element,\r\n    number,\r\n    less,\r\n    more,\r\n    type,\r\n    btnClass,\r\n    btnClassAppend,\r\n  }) => {\r\n    const typeAria = this._checkExp ? less || \"\" : more || \"\";\r\n    const label = this._checkExp ? \"collapse\" : \"expand\";\r\n    const expanded = this._checkExp ? true : false;\r\n\r\n    const button = createElement(\"button\");\r\n    button.className =\r\n      btnClassAppend == null ? btnClass : btnClass + \" \" + btnClassAppend;\r\n    setAttributes(button, {\r\n      \"aria-expanded\": expanded,\r\n      \"aria-label\": label,\r\n      tabindex: 0,\r\n    });\r\n\r\n    button.insertAdjacentHTML(\r\n      \"beforeend\",\r\n      number ? typeAria + getNumber(element, type) : typeAria\r\n    );\r\n    return button;\r\n  };\r\n\r\n  /**\r\n   * Event handler\r\n   *\r\n   * @param {Object} object\r\n   * @param {Event} event\r\n   */\r\n  _handleEvent = (object, { target }) => {\r\n    const {\r\n      element,\r\n      type,\r\n      limit,\r\n      less,\r\n      typeElement,\r\n      originalText,\r\n      truncatedText,\r\n      btnClass,\r\n    } = object;\r\n\r\n    // check if the button is clicked\r\n    const checkContainsClass = target.classList.contains(btnClass);\r\n\r\n    if (!checkContainsClass) return;\r\n\r\n    const ariaExpanded = element.getAttribute(\"aria-expanded\");\r\n    this._checkExp = ariaExpanded === \"false\";\r\n\r\n    // --------------------------------------------------\r\n    // text\r\n    if (type === \"text\" && checkContainsClass) {\r\n      element.textContent = \"\";\r\n\r\n      element.insertAdjacentHTML(\r\n        \"beforeend\",\r\n        this._checkExp ? originalText : truncatedText\r\n      );\r\n\r\n      if (less) {\r\n        const el = createElement(typeElement);\r\n        el.classList.add(\"show-more-wrapper\");\r\n        el.insertAdjacentElement(\"beforeend\", this._createBtn(object));\r\n        element.appendChild(el);\r\n      }\r\n    }\r\n\r\n    // --------------------------------------------------\r\n    // list and table\r\n    if (type === \"list\" || type === \"table\") {\r\n      const items = this._getNumberCount(element, type);\r\n\r\n      for (let i = 0; i < items.length; i++) {\r\n        const typeRemove =\r\n          type === \"list\" ? i >= limit && i < items.length - 1 : i >= limit;\r\n\r\n        if (ariaExpanded === \"false\") {\r\n          addRemoveClass(items[i]);\r\n        } else if (typeRemove) {\r\n          addRemoveClass(items[i], true);\r\n        }\r\n      }\r\n    }\r\n\r\n    // set aria-expanded\r\n    if (type) {\r\n      this._setExpand({ ...object, target });\r\n    }\r\n  };\r\n\r\n  _getNumberCount = (element, type) => {\r\n    return type === \"list\" ? [].slice.call(element.children) : element.rows;\r\n  };\r\n\r\n  /**\r\n   * Add button\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _addBtn = (object) => {\r\n    const { type, element, more, typeElement } = object;\r\n\r\n    if (!more) return;\r\n\r\n    if (type === \"table\") {\r\n      element.insertAdjacentElement(\"afterend\", this._createBtn(object));\r\n    } else {\r\n      const el = createElement(typeElement);\r\n      el.classList.add(\"show-more-wrapper\");\r\n      el.appendChild(this._createBtn(object));\r\n      element.appendChild(el);\r\n    }\r\n  };\r\n\r\n  /**\r\n   * Set aria-expanded\r\n   *\r\n   * @param {Object} object\r\n   */\r\n  _setExpand = (object) => {\r\n    const { element, type, less, more, number, target } = object;\r\n\r\n    const typeAria = this._checkExp ? less : more;\r\n    const aria = this._checkExp ? \"expand\" : \"collapse\";\r\n    const ariaText = type === \"table\" ? type : `the ${type}`;\r\n    const lastChild = element.lastElementChild;\r\n\r\n    setAttributes(element, { \"aria-expanded\": this._checkExp });\r\n    setAttributes(target, {\r\n      \"aria-expanded\": this._checkExp,\r\n      \"aria-label\": `${aria} ${ariaText}`,\r\n    });\r\n\r\n    // callback function on more/less\r\n    this._onMoreLess(aria, object);\r\n\r\n    if (typeAria) {\r\n      target.innerHTML = number\r\n        ? typeAria + getNumber(element, type)\r\n        : typeAria;\r\n    } else if (type === \"table\") {\r\n      target.parentNode.removeChild(target);\r\n    } else if (type === \"list\") {\r\n      lastChild.parentNode.removeChild(lastChild);\r\n    }\r\n  };\r\n}\r\n"],"names":["getNumber","type","rows","children","elementType","numbersElementHidden","slice","call","filter","el","className","length","addRemoveClass","element","classList","setAttributes","object","key","setAttribute","createElement","document","defaultRegex","newLine","match","replace","space","br","html","defaultOptions","typeElement","more","less","number","nobutton","after","btnClass","btnClassAppend","constructor","onMoreLess","regex","config","_initial","ellipsis","limit","this","_object","limitCounts","ellips","console","log","originalText","innerHTML","trim","textContent","orgTexReg","_regex","truncatedText","count","div","insertAdjacentHTML","walk","fn","node","firstChild","nodeType","childNodes","nextSibling","len","data","substringData","htmlSubstr","concat","_clickEvent","_addBtn","items","_getNumberCount","i","nextElementSibling","addEventListener","_handleEvent","bind","_createBtn","_ref","typeAria","_checkExp","label","expanded","button","tabindex","target","checkContainsClass","contains","ariaExpanded","getAttribute","add","insertAdjacentElement","appendChild","typeRemove","_setExpand","aria","ariaText","lastChild","lastElementChild","_onMoreLess","parentNode","removeChild","elements","querySelectorAll","map","item","index","configData","JSON","parse","configDataAndGlobal","classArray"],"mappings":"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"}